// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer.Context;

namespace Luftborn.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230318185556_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DomainLayer.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountAvailable")
                        .HasColumnType("int");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SellerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SellerId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AmountAvailable = 10,
                            Cost = 10,
                            CreatedAt = new DateTime(2023, 3, 18, 20, 55, 55, 488, DateTimeKind.Local).AddTicks(1493),
                            IsDeleted = false,
                            Name = "Product One",
                            SellerId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            AmountAvailable = 10,
                            Cost = 20,
                            CreatedAt = new DateTime(2023, 3, 18, 20, 55, 55, 488, DateTimeKind.Local).AddTicks(1794),
                            IsDeleted = false,
                            Name = "Product Two",
                            SellerId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            AmountAvailable = 10,
                            Cost = 30,
                            CreatedAt = new DateTime(2023, 3, 18, 20, 55, 55, 488, DateTimeKind.Local).AddTicks(1829),
                            IsDeleted = false,
                            Name = "Product Three",
                            SellerId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            AmountAvailable = 10,
                            Cost = 40,
                            CreatedAt = new DateTime(2023, 3, 18, 20, 55, 55, 488, DateTimeKind.Local).AddTicks(1853),
                            IsDeleted = false,
                            Name = "Product Four",
                            SellerId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            AmountAvailable = 10,
                            Cost = 50,
                            CreatedAt = new DateTime(2023, 3, 18, 20, 55, 55, 488, DateTimeKind.Local).AddTicks(1875),
                            IsDeleted = false,
                            Name = "Product Five",
                            SellerId = 1L
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 3, 18, 20, 55, 55, 482, DateTimeKind.Local).AddTicks(151),
                            IsDeleted = false,
                            Name = "Seller"
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<int>("deposit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2023, 3, 18, 20, 55, 55, 487, DateTimeKind.Local).AddTicks(2844),
                            IsDeleted = false,
                            Name = "Seller One",
                            RoleId = 1L,
                            deposit = 0
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2023, 3, 18, 20, 55, 55, 487, DateTimeKind.Local).AddTicks(3246),
                            IsDeleted = false,
                            Name = "Seller Two",
                            RoleId = 1L,
                            deposit = 0
                        });
                });

            modelBuilder.Entity("DomainLayer.Models.Product", b =>
                {
                    b.HasOne("DomainLayer.Models.User", "Seller")
                        .WithMany("Products")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("DomainLayer.Models.User", b =>
                {
                    b.HasOne("DomainLayer.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DomainLayer.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("DomainLayer.Models.User", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
